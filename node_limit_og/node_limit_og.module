<?php

/**
 * @file
 * Module to restrict the number of nodes within an organic group.
 */

/**
 * Implements hook_node_limit_applies_in_context().
 */
function node_limit_og_node_limit_applies_in_context($lid, $node, $user) {
  //TODO
  //return DOES_APPLY iff the $node is being created in this limit's group
  //return NEUTRAL iff the $node is for an OG, but not this OG
  //return DOESNT_APPLY iff the $node is not for an OG
  $limit = node_limit_og_node_limit_load($lid);
  if (empty($limit)) {
    return NODE_LIMIT_LIMIT_NEUTRAL;
  }
  return array('node_limit_og' => NODE_LIMIT_LIMIT_DOES_APPLY);
}

/**
 * Implements hook_node_limit_sql().
 */
function node_limit_og_node_limit_sql($lid, SelectQuery $select) {
  $limit = node_limit_og_node_limit_load($lid);
  if (empty($limit)) return;

  $subselect = db_select('field_data_group_audience', 'fdga')
    ->fields('fdga', array('entity_id'))
    ->condition('group_audience_gid', $limit['node_limit_og'])
    ->condition('entity_type', 'node');
  $select->condition('nid', $subselect, 'IN');
}

/**
 * Implements hook_node_limit_element().
 */
function node_limit_og_node_limit_element($lid = 0) {
  $limit = node_limit_og_node_limit_load($lid);
  
  $groups = array();
  foreach (og_load_multiple(og_get_all_group()) as $group) {
    $groups[$group->gid] = $group->label;
  }
  
  $group = !empty($limit['node_limit_og']) ? $limit['node_limit_og'] : '';
  return array(
    'node_limit_og' => array(
      '#title' => t('Organic Group'),
      '#type' => 'select',
      '#options' => $groups,
      '#default_value' => $group
    )
  );
}

/**
 * Implements hook_node_limit_element_validate().
 */
function node_limit_og_node_limit_element_validate($element) {
  /**
   * Validation:
   * must be a valid organic group
   */
  return TRUE;
}

/**
 * Implements hook_node_limit_save().
 */
function node_limit_og_node_limit_save($lid, $applies, $element) {
  if ($applies) {
    db_insert('node_limit_og')
      ->fields(array(
        'lid' => $lid,
        'ogid' => $element,
      ))
      ->execute();
  }
}

/**
 * Implements hook_node_limit_delete().
 */
function node_limit_og_node_limit_delete($lid) {
  db_delete('node_limit_og')
    ->condition('lid', $lid)
    ->execute();
}

/**
 * Implements hook_node_limit_load().
 */
function node_limit_og_node_limit_load($lid) {
  $select = db_select('node_limit_og', 'nlo')
    ->fields('nlo')
    ->condition('lid', $lid);
  
  $info = $select->execute()->fetchAssoc();
  if (intval($info['lid']) == 0) {
    return array();
  }
  return array(
    'node_limit_og' => $info['ogid']
  );
}
